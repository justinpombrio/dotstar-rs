// CIE-lab delta, scaled by 12 bits.
pub const DELTA: i32 = (6 << 12) / 29;

// The CIE-XYZ tristimulus values for the D65 illuminant, unscaled.
//     https://en.wikipedia.org/wiki/Illuminant_D65
pub const D65_ILLUMINANT: [i32; 3] = [95, 100, 109];

// The conversion table from CIE-XYZ to linear RGB, scaled by 12 bits.
//     https://en.wikipedia.org/wiki/SRGB
pub const XYZ_TO_RGB_LINEAR: [[i32; 3]; 3] =
    [[13273, -6296, -2042], [-3969, 7683, 170], [228, -836, 4329]];

// Lookup table for converting between linear RGB and sRGB.
// For L in range [0, 100] and R,G,B in range [0, 256].
// Input scaled by 12 bits.
//     https://en.wikipedia.org/wiki/SRGB
pub const LINEAR_RGB_TO_SRGB: [i32; 256] = [
    0, 123, 247, 371, 495, 619, 743, 866, 990, 1114, 1238, 1365, 1499, 1641,
    1790, 1947, 2111, 2284, 2464, 2652, 2849, 3054, 3267, 3489, 3719, 3957,
    4205, 4461, 4726, 5000, 5283, 5576, 5877, 6188, 6508, 6838, 7177, 7526,
    7884, 8252, 8631, 9019, 9416, 9825, 10243, 10671, 11110, 11559, 12018,
    12488, 12969, 13460, 13961, 14474, 14997, 15531, 16076, 16632, 17200,
    17778, 18367, 18968, 19580, 20203, 20838, 21484, 22142, 22812, 23493,
    24186, 24890, 25607, 26335, 27075, 27827, 28592, 29368, 30157, 30957,
    31770, 32596, 33434, 34284, 35146, 36021, 36909, 37810, 38723, 39648,
    40587, 41539, 42503, 43480, 44470, 45474, 46490, 47519, 48562, 49618,
    50687, 51769, 52865, 53974, 55097, 56233, 57383, 58546, 59723, 60914,
    62119, 63337, 64569, 65815, 67074, 68348, 69636, 70938, 72254, 73584,
    74928, 76286, 77659, 79046, 80447, 81863, 83293, 84737, 86196, 87670,
    89158, 90661, 92179, 93711, 95258, 96820, 98396, 99988, 101594, 103216,
    104852, 106504, 108170, 109852, 111548, 113260, 114988, 116730, 118488,
    120261, 122049, 123853, 125672, 127507, 129358, 131224, 133105, 135002,
    136915, 138844, 140788, 142748, 144724, 146716, 148724, 150748, 152787,
    154843, 156915, 159002, 161106, 163226, 165362, 167515, 169684, 171869,
    174070, 176288, 178522, 180772, 183039, 185322, 187622, 189939, 192272,
    194622, 196988, 199372, 201771, 204188, 206622, 209072, 211539, 214023,
    216524, 219042, 221577, 224129, 226698, 229284, 231887, 234508, 237145,
    239800, 242472, 245162, 247868, 250592, 253334, 256093, 258869, 261663,
    264474, 267303, 270149, 273013, 275895, 278794, 281711, 284646, 287599,
    290569, 293557, 296563, 299587, 302628, 305688, 308766, 311861, 314975,
    318107, 321257, 324425, 327611, 330815, 334037, 337278, 340537, 343814,
    347110, 350424, 353756, 357107, 360476, 363864, 367270, 370695, 374138,
    377600, 381080, 384579, 388097, 391633, 395189, 398763, 402355, 405967,
];

// Table of squares, for computing the square root of an `i8`.
pub const SQUARES: [i32; 128] = [
    0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289,
    324, 361, 400, 441, 484, 529, 576, 625, 676, 729, 784, 841, 900, 961, 1024,
    1089, 1156, 1225, 1296, 1369, 1444, 1521, 1600, 1681, 1764, 1849, 1936,
    2025, 2116, 2209, 2304, 2401, 2500, 2601, 2704, 2809, 2916, 3025, 3136,
    3249, 3364, 3481, 3600, 3721, 3844, 3969, 4096, 4225, 4356, 4489, 4624,
    4761, 4900, 5041, 5184, 5329, 5476, 5625, 5776, 5929, 6084, 6241, 6400,
    6561, 6724, 6889, 7056, 7225, 7396, 7569, 7744, 7921, 8100, 8281, 8464,
    8649, 8836, 9025, 9216, 9409, 9604, 9801, 10000, 10201, 10404, 10609,
    10816, 11025, 11236, 11449, 11664, 11881, 12100, 12321, 12544, 12769,
    12996, 13225, 13456, 13689, 13924, 14161, 14400, 14641, 14884, 15129,
    15376, 15625, 15876, 16129,
];
